var textForPages = ["Internship Report                                                                     by                                                        VARUN SAI S                                                          22FRSB60                                                      V SEM BSc FS ‘B’                                                               At                    @TECHBYHEART Bangalore | Cyber Security \& Ethical Hacker Institute                                                       JUNE-JULY ‘24                                                            SUBMITTED TO                                      DEPARTMENT OF FORENSIC SCIENCE                                    KRISTU JAYANTI COLLEGE, AUTONOMOS                                                       BENGALURU","CERTIFICATE                   This is to certify that the report of the Internship at TechByHeart submitted to The                 Department of Forensic Science, Kristu Jayanti College (Autonomous), in partial                 fulfillment of the requirements for the award of the degree of the Bachelor of Science                 is a record of original work done by Mr. Varun Sai S, during June-July 2024 of his                 study in the Department of Forensic Science, Kristu Jayanti College (Autonomous),                 and it has not formed the basis for the award of any degree/ diploma / associateship                 / fellowship or other similar title to any candidate of any College / University.                                         Countersigned                                     Ms. Annapoorni Ammal                                   Coordinator                                      Internship Co-ordinator                       Department of Forensic Science","","DECLARATION                  I VARUN SAI S hereby declare that the report of the Internship at TechByHeart                 submitted  to  The  Department  of  Forensic  Science,  Kristu  Jayanti  College                 (Autonomous), in partial fulfilment of the requirements for the award of the degree                  of the Bachelor of Science is a record of original work done by me during June-July                2024 under the guidance of Mr Muhammad Shafeek, TechByHeart.                                                                                          Signature of the Student                                                                                      Register Number","ACKNOWLEDGEMENTS                  I would like to express my sincere gratitude to everyone who supported me                throughout my internship at TechByHeart, Bengaluru. First, I am deeply                thankful to my mentor, Mr. Muhammad Shafeek, for providing invaluable                 guidance and support during this experience. Your expertise greatly enriched                my learning.                  I am grateful to the Management of Kristu Jayanti College for the                opportunity to undertake this internship, and to Mr. Don Caeiro, the                Coordinator of the Department of Forensic Science, for your continuous                support.                   I also extend my thanks to Ms. Annapoorni Ammal, Assistant Professor                of the Department of Forensic Science for their encouragement, and to my co-                 students for the collaborative spirit that made this journey rewarding.                 Lastly, I am thankful to my family members and acquaintances for their                 unwavering support and motivation throughout this period.","CONTENTS                        1.  INTRODUCTION OF THE ORGANIZATION                     2.  DAY WISE REPORT                     3.  OUTCOME OF THE INTERNSHIP                     4.  CONCLUSION                     5.  REFERENCES","INTRODUCTION OF THE                                              ORGANIZATION                                                              INTRODUCTION OF THE ORGANIZATION","TECHBYHEART (TBH)                  Techbyheart (TBH) is a practical-oriented cybersecurity training institute that                embarked on its journey into the cybersecurity realm in 2018, driven by the vision                 of securing the digital space. It started in Kochi, Kerala, and has since expanded its                branches to Kottakkal, Trivandrum, Bangalore, London (UK), and Dubai (UAE).                  2019:                      ●  TBH continued its growth and development in the field of cybersecurity                        training.                  2020:                     ●  TBH hosted a national-level conference, commenced online training, and                         initiated programs in the UAE.                  2022:                     ●  TBH presently provides training and internships in cybersecurity at its                         Techbyheart Academy in Koramangala, Bangalore.","DAY WISE REPORT                                                                                       Day 1 - 18/6/24","Introduction to Cybersecurity                  Topics Covered: (Theory)                 1. Hacking                 Definition:                      ●  Hacking refers to the act of exploiting vulnerabilities in a system or network to gain                        unauthorized access to data or systems. It can be done for malicious purposes (black hat                        hacking) or for security testing and improvement (white hat hacking).                 Types of Hackers:                      ●  Black Hat Hackers: Individuals who break into systems for malicious purposes such as                        stealing data, causing damage, or spreading malware.                    ●  White Hat Hackers: Ethical hackers who perform hacking activities with permission to                        identify and fix security vulnerabilities.                    ●  Gray Hat Hackers: Individuals who may break into systems without permission but                        without malicious intent, often to expose vulnerabilities or for personal challenge.                 Common Hacking Techniques:                      ●  Phishing: Tricking individuals into revealing personal information through fake emails                        or websites.                    ●  SQL Injection: Inserting malicious SQL queries into input fields to manipulate a                        database.                    ●  Cross-Site Scripting (XSS): Injecting malicious scripts into webpages viewed by other                        users.                    ●  Brute Force Attack: Trying many passwords or encryption keys until the correct one is                        found.                   2. Cybersecurity                  Definition:                      ●  Cybersecurity involves protecting systems, networks, and data from digital attacks. It                        encompasses technologies, processes, and practices designed to defend against cyber                        threats.                 Core Principles:","●  Confidentiality: Ensuring that sensitive information is accessed only by authorized                        individuals.                    ●  Integrity: Ensuring the accuracy and reliability of data by protecting it from                        unauthorized modification.                    ●  Availability: Ensuring that data and systems are available to authorized users when                        needed.                 Key Components:                      ●  Network Security: Protecting the integrity and usability of networks and data through                        measures like firewalls, intrusion detection systems, and secure protocols.                    ●  Application Security: Protecting software applications from vulnerabilities that could be                        exploited by attackers.                    ●  Information Security: Protecting information stored and processed by systems from                        unauthorized access and breaches.                    ●  Incident Response: Preparing for, detecting, and responding to security breaches or                        attacks.                   3. Offensive and Defensive Strategies                 Offensive Strategies:                      ●  Penetration Testing: Simulating attacks on a system to find and fix vulnerabilities                        before they can be exploited.                    ●  Red Teaming: A group that conducts full-scale simulated attacks to test an                        organization’s defenses and response capabilities.                    ●  Social Engineering: Techniques used to manipulate individuals into revealing                        confidential information or performing actions that compromise security.                 Defensive Strategies:                      ●  Blue Teaming: A group responsible for maintaining and improving an organization’s                        security posture, defending against attacks identified by red teams.                    ●  Threat Hunting: Proactively searching for and mitigating threats that have evaded                        existing security measures.                    ●  Security Information and Event Management (SIEM): Systems that collect and                        analyze security data to detect, respond to, and manage incidents.                    ●  Zero Trust Architecture: A security model that assumes no trust within or outside the                        network perimeter and requires continuous verification of user and device identities.                 Balancing Offense and Defense:","●  Effective cybersecurity involves a balance of both offensive and defensive strategies.                        Offensive tactics help identify potential vulnerabilities and test the effectiveness of                        defensive measures. Defensive tactics ensure ongoing protection, monitoring, and                        response to evolving threats.                  4. Vulnerability Analysis and Penetration Testing (VAPT)                     - Ethical Hacking and Penetration Testing                    - Phases of Penetration Testing                    - OWASP Top 10 Vulnerabilities                   Tools for each phase of penetration testing:                     ●       Planning                    ●       Reconnaissance                    ●       Scanning                    ●       Exploitation                    ●       Post-Capture                    ●       Reporting                    5. Network Basics:                 Definition: A digital communication network for sharing resources between computers. It is the                connection between two or more devices.                 Types of Networks:                     -  LAN (Local Area Network)                    -  WLAN (Wireless Local Area Network)                    - MAN (Metropolitan Area Network)                   - WAN (Wide Area Network)                   - VPN (Virtual Private Network)                 6. Technical Setup: (Explored practically)                      ●  Installing Kali Linux                    ●  IP Address:                   - Available only when connected to the internet.","- A numerical address attached to each device connected to a network.                     ●    Types:                      - IPv4 (established in 1981, 4-octet address)                     - IPv6 (established in 2012)                   Example: 192.168.100.1 (provided by ISP)                     ●  MAC Address:                   - A unique identifier assigned to network adapters.                    - Built into the device.                 7. OSI Model:                                                                       Fig: OSI Model                    8. TCP (Transmission Control Protocol):                 A standard that defines how to establish and maintain a network conversation through which                applications can exchange data.                 TCP Flags: Indicate the state of a connection.                 3-Way Handshake Process:                      ➢    SYN (Synchronization)                    ➢    SYN-ACK (Acknowledgment)                    ➢    ACK (Acknowledgment)                 9. UDP (User Datagram Protocol):","Facilitates fast communication, sends only SYN.                                                              DAY 2                                            Introduction to Operating Systems:                    The operating system acts as an intermediary between the user and the hardware, providing                essential services such as user interface, resource management, file management, multitasking,                and security.                      ●  Linux Overview:                 History:                   - Ken Thompson \& Dennis Ritchie created UNIX in 1969.                    - UNIX derivatives include BSD and MINIX.                   - Linus Torvalds developed the Linux kernel in 1991.                   - Popular Linux distributions: Debian, Red Hat, etc.                 Kernel:                   - The core of the OS, responsible for managing hardware and software resources with full                access.                      ●  Linux Commands:                 Shell: The interface that takes commands from the user and passes them to the OS.                 Sudo:                   - Grants privileges to run programs with elevated security.                 Common Commands:                  - `ls -la`: Lists directories and files with detailed information.                   - Example: `drwxrwxrwx` (read, write, execute permissions).                 - `chmod`: Changes file permissions.                  - `mkdir`: Creates a new directory.","- `nano`: A text editor.                 - `cat [filename]`: Reads the content of a file.                        ●  File Permissions:                 - File permissions are represented as a combination of read ®, write (w), and execute (x) for the                user, group, and others.                 - `chmod`: Used to change file permissions. For example, `chmod 755` sets read, write, execute                permissions for the owner, and read, execute permissions for the group and others.                     ●  Linux File Structure:                           -  `/`: Root directory.                           -  `/home`: User home directories.                           -  `/bin`: Binary files.                           -  Present Working Directory (pwd): Displays the current directory.                    ●  Bash Shell: A command-line interface for Unix/Linux systems.                    ●  Manual Command: `man [command]`: Provides a manual for the specified command.","DAY 3                                                     Understanding Ports                    1. Ports: Ports are virtual points where connections start and end. There are 65,536                ports available.                     i) Common ports include:                       - HTTP: 80                        - HTTPS: 443                       - SSH: 22                     ii) Registered ports range up to 1024.                  2. Breaking Down URLs:                 A URL consists of several components:                     i) Scheme (e.g., HTTPS)                    ii) Subdomain \& Domain                     iii) Top-level domain                    iv) Port number                     v) Path                    vi) Query string parameters                     vii) Fragment                  3. Domain Name Service (DNS):                 DNS translates domain names into IP addresses, facilitating user-friendly web                 navigation.","4. Phases of Hacking:                  The six stages of hacking include:                    i) Planning                     ii) Reconnaissance                    iii) Scanning                     iv) Exploitation                    v) Post-Exploitation                     vi) Reporting                  5. Passive and Active Information Gathering:                     ●  Passive Information Gathering:                     i) Tools like Shodan and Google Dorking can be used to gather information                without directly interacting with the target.                      ●  Active Information Gathering:                    i) Nmap is a powerful network mapping tool.                        - Example: nmap google.com                       - Detailed scan: nmap -SV -A [IP address]                  6. Directory Busting Tools:                 Tools like Dirbuster and Gobuster are used to discover hidden directories and files                 on a web server.                    i) Example: sudo apt install gobuster                     ii) Usage: gobuster dir -u [http://link] -w /usr/share/wordlists/dirbuster/directory-                list-2.3-medium.txt","DAY 4                                            Exploring Network Vulnerabilities                    Finding IP Addresses on a LAN:                 I learned how to find the IP addresses of devices on a Local Area Network (LAN).                 Tools like Nmap, ARP, and arp-scan can be used for this purpose. ARP (Address                Resolution Protocol) is used to discover IP hosts on a LAN by mapping MAC                addresses to IP addresses.                  Using Nmap for Network Scanning:                 I practiced using Nmap to find IP addresses on a subnet.                      ●  First, I found the subnet using the command `ip addr` to identify the subnet,                        for example, 192.168.0.0/24.                     ●  Next, I used the command `sudo nmap 192.168.0.0/24` to scan the subnet.                    ●  The results showed different IP addresses and the open ports for each                        address. For example, port 80 might be open on a host server, indicating a                         potential web server.                 Exploring Open Ports and Services:                  Using the Nmap scan, I found an IP address (e.g., 192.168.0.130) with port 80                open. This indicates a web server running on that address.                  Using Gobuster and Dirb for Directory Busting:                 I used tools like Gobuster and Dirb to find hidden files and directories on the                discovered IP address. Gobuster command: `gobuster dir -u [IP] -w                 [wordlist_path].txt`. Dirb command: `dirb http://192.168.0.139/site`.                 Exploiting Discovered Directories:                  I then exploited all the discovered directories and files to identify possible                vulnerabilities and hidden assets","DAY 5                                       DVWA - Damn Vulnerable Web Aplication                 Damn Vulnerable Web Application (DVWA) is a software project that                intentionally includes security vulnerabilities and is intended for educational                 purposes.                  Steps followed to exploit DVWA                 1. Configuring Network Settings:                      1.  Find your IP address and subnet mask:                         Ex: IP Address (192.168.0.###). Use a subnet calculator to determine that                        the subnet mask (255.255.255.0) corresponds to a CIDR notation of /24.                                                              Fig: Image depicting Configuring Network Settings                 2. Setting Up DVWA (Damn Vulnerable Web Application):                  Login credentials: By default, Username: admin and Password: password                Enter these credentials to access the DVWA application.                  3. Inspecting HTTP Headers:                      ●  HTTP headers provide details of the requests and responses between your                        browser and the web server. They can be useful for debugging or testing                        web applications.                  4. Using Burp Suite for Web Security Testing:","●  Configure Burp Suite, a tool used for testing web application security, to                        intercept, modify, and analyze the traffic between your browser and the                         target application.","DAY 6                                                      DVWA- Continued                 Network Configuration:                      ●  Use ifconfig to check your network settings:                            ○  IP Address: 192.168.0.159                            ○  Subnet Mask: /24                             ○  Opened DVWA (Damn Vulnerable Web Application):                      ●  Access the application with the credentials:                           ○  Username: admin                            ○  Password: password                 Command Execution Exploit:                  Go to the \"Command Execution\" section in DVWA.                  In the input box, type the following command to execute a ping and list directory                contents:                  Ping 198.162.0.123; ls                 This command will send a ping to the IP address 198.162.0.123 and then list the                files in the current directory.                  SQL Injection:                 Steps:                      •  Go to the \"SQL Injection\" section in DVWA.                     •  Try entering SQL code into the input fields to manipulate the database                        queries.                    •  For example, you can enter ' OR '1'='1 in an input field to bypass                         authentication or retrieve data.","DAY 7                                                Using Metasploit Framework                      ●  Start Metasploit Console:                         Open a terminal and type “msfconsole” to start the Metasploit Framework                        console.                     ●  Perform ARP Scan:                         Use an ARP scan to discover devices on your local network:                           ○  arp-scan --localnet                        This will list all devices connected to your local network.                      ●  Search for Vulnerabilities:                        In the Metasploit console, search for a specific vulnerability:                                Cmd= search vsftpd 2.3.4                        This command will display information about the vulnerabilities related to                        the vsftpd 2.3.4 service                      ●  Set Up Exploit:                        Select the appropriate exploit module for vsftpd 2.3.4:                               Cmd= use exploit/unix/ftp/vsftpd_234_backdoor                         Set the target IP address (RHOST) and your local IP address (LHOST):                        using the commands                            ○  Cmd= set RHOST <target IP>                           ○  Cmd= set LHOST <my IP>                     ●  Run the Exploit:                         Execute the exploit to attempt to gain access to the target system:                           ○  Cmd= run or exploit","DAY 8                                                     Solving a Lab (CTF)                  Scanned to Find IP Addresses:                      ●  Start by scanning the network to identify active IP addresses and devices.                    ●  Tools like nmap or arp-scan can be used to discover these devices.                   Reconnaissance:                          Passive Reconnaissance:                             ○  Collect information about the target without directly interacting with                                it.                           ○  Techniques include searching public records, social media, and other                               online resources.                          Active Reconnaissance:                             ○  Directly interact with the target to gather information.                           ○  Techniques include scanning the target network using tools like nmap                               or Metasploit.                    Types of Vulnerabilities:                  Unauthenticated Vulnerabilities:                      ●  Vulnerabilities that can be exploited without any form of authentication.                    ●  Example: Publicly accessible admin pages or default credentials.                  Authenticated Vulnerabilities:                     ●  Vulnerabilities that require an attacker to be authenticated (logged in) to                         exploit.                    ●  Example: SQL injection vulnerabilities within a logged-in user context.","Discovery:                      ●  Vulnerabilities related to the discovery of sensitive information or hidden                        resources.                     ●  Example: Directory listing enabled on a web server.                  Types of Reconnaissance:                   Full Reconnaissance:                     ●  Comprehensive gathering of information about the target, both passive and                         active.                 Stealth Reconnaissance:                      ●  Techniques designed to avoid detection.                     ●  Example: Slow scans to evade intrusion detection systems (IDS).                 Passive Reconnaissance:                      ●  Information gathering without directly interacting with the target.                     ●  Example: Searching online databases and public records.                  Common Vulnerable Exploits (CVE):                      ●  A list of publicly disclosed cybersecurity vulnerabilities.                    ●  Each CVE contains an identification number, a description, and at least one                         public reference.                 Common Weakness Enumeration (CWE):                      ●  A list of software weaknesses, providing a common language for describing                         software security flaws.                 NIST (National Institute of Standards and Technology):                      ●  Develops cybersecurity standards, guidelines, best practices, and other                         resources.","(1)                                                                            (2)                                           Fig: Images depicting WPScan (1 \& 2)","DAY 9                                                 Social Engineering Attacks                  1. Pharming:                      ●  Description: A type of social engineering attack where the threat actor                        redirects a victim from a valid website to a malicious one that appears                         authentic.                    ●  Example: A user tries to visit their bank's website but is redirected to a fake                        website that looks identical. When they enter their credentials, the attacker                         captures them.                 2. Typo Squatting:                      ●  Description: An attack where attackers create websites with URLs that are                        common misspellings of legitimate sites.                     ●  Example: A user types \"goggle.com\" instead of \"google.com\" and lands on                        a malicious site.                  3. Email Phishing:                      ●  Description: Sending fraudulent emails that appear to come from a                        reputable source to steal sensitive information.                    ●  Example: An email that looks like it's from a bank, asking the user to verify                         their account information by clicking a link and entering their credentials.                  4. Spear Phishing:                     ●  Description: A targeted phishing attack aimed at a specific individual or                         organization by pretending to be someone from the same company or a                        known contact.                    ●  Example: An email from a \"colleague\" asking for login credentials to access                         a shared document.                 5. Whaling:","●  Description: A type of phishing attack that targets high-profile business                        executives or senior officials, often with a more official and serious                         appearance.                    ●  Example: An email that appears to be from the CEO, requesting an urgent                        transfer of funds.                  6. Vishing (Voice Phishing):                      ●  Description: Using phone calls to trick individuals into revealing sensitive                        information.                     ●  Example: A call from someone pretending to be from tech support, asking                        for login credentials to fix an issue.                  7. SMS Phishing (Smishing):                     ●  Description: Sending fraudulent text messages to trick individuals into                         clicking on a link or providing personal information.                    ●  Example: A text message claiming to be from a bank, asking the user to                         click a link to verify their account.                 8. USB Drop Attack:                      ●  Description: Distributing infected USB drives in public places. When                        someone picks up the drive and plugs it into their computer, it installs                         malware.                    ●  Example: A USB drive labeled \"Confidential\" is left in a company parking                        lot. An employee finds it and plugs it into their work computer, infecting the                         system with malware.                 9. Watering Hole Attack:                      ●  Description: Compromising a specific group’s commonly visited websites                         to infect the group’s members with malware.                    ●  Example: Hackers identify a website frequently visited by employees of a                        specific company and inject malware into the site. When employees visit the                         site, their systems get infected.","Tools for Social Engineering Attacks                  Social Engineering Toolkit (SET):                      ●  Description: SET is an open-source Python-driven tool aimed at penetration                        testing around social engineering. It has a variety of attack vectors such as                         phishing emails, website attacks, and more.                    ●  Usage Examples:                           ○  Creating phishing emails with realistic-looking links.                           ○  Cloning legitimate websites to capture credentials.                            ○  Generating payloads for USB drop attacks.","DAY 10                                                  Exploring different tools                  Tools and Techniques:                  1. Photon (OSINT):                      ●  Description: An OSINT (Open Source Intelligence) tool used to gather                        information about a target through various online sources. It can collect data                        like emails, usernames, subdomains, and more by scanning URLs and                         websites.                 2. NSLookup:                      ●  Command: nslookup [domain name]                     ●  Usage: Used to find the IP address associated with a domain name.                    ●  Example: nslookup example.com will return the IP address for                        example.com.                  3. Nmap:                      ●  Command: nmap -p [port] [IP]                    ●  Usage: Used to scan for open ports on a target IP address.                    ●  Example: nmap -p 443 [IP] scans port 443 (HTTPS) on the specified IP.                  4. Traceroute:                      ●  Command: traceroute [domain/IP]                    ●  Usage: Traces the path packets take to reach a network host.                     ●  Example: traceroute example.com shows the route taken to reach                        example.com.                  5. Sherlock:                      ●  Description: A tool to find usernames across many social networks.                    ●  Usage: sherlock [username] will search for the specified username on                        various platforms.","6. ZAP (Zed Attack Proxy) / Nessus:                      ●  Description: Vulnerability scanners used to find security issues in web                        applications and networks.                     ●  Usage: Both tools can scan for vulnerabilities and generate reports.                 7. Dig:                      ●  Command: dig -a [domain]                     ●  Usage: DNS lookup utility to query DNS servers for information about                        domains.                    ●  Example: dig -a example.com provides detailed DNS information about                        example.com.                  8. Dirsearch:                      ●  Command: dirsearch -u [URL]                    ●  Usage: A web path scanner to find directories and files on web servers.                     ●  Example: dirsearch -u http://example.com scans for directories on the                        specified URL.                  9. Phishing Tools:                      ●  MaxPhisher: A tool for generating phishing links.                    ●  2Fishes: Another phishing tool for creating and managing phishing                        campaigns.                     ●  Hack.chat: A minimal, distraction-free chat application where you can join                        a room by URL.                    ●  Example: hack.chat/?username allows joining a chat room with the                        specified username.                  10. Honey Port:                      ●  Description: A decoy port set up to detect unauthorized access attempts.                        When attackers try to access this port, it triggers an alert.                  11. Wappalyzer:                      ●  Command: wappalyzer \\","●  Usage: A tool to detect the technologies used by a website, such as the                        CMS, web server, programming languages, etc.                  12. Whois Lookup:                      ●  Command: whois [domain]                    ●  Usage: Retrieves registration information about a domain, such as the                         owner, contact details, and more.","Day 11                                               Social-Engineer Toolkit (SET)                  The Social-Engineer Toolkit (SET) is a tool developed by David Kennedy. This                tool can be used to launch numerous social engineering attacks and can be                integrated with third-party tools and frameworks such as Metasploit.                  Steps to Use SET for Spear-Phishing Attacks:                      ●  Launch SET:                        Use the command setoolkit to launch the Social-Engineer Toolkit.                                            Fig: Interface of SET                     ●  Select Social-Engineering Attacks:                         From the menu, select 1) Social-Engineering Attacks to start the social                        engineering attack.                                             Fig: Interface to select type of attack","●  Select Spear-Phishing Attack Vectors:                        From the next menu, select 1) Spear-Phishing Attack Vectors to start the                         spear-phishing attack.                                      Fig: Depicting Spearphishing                     ●  Create a File Format Payload:                         To create a file format payload automatically, select 2) Create a FileFormat                        Payload.                                                        Fig: Payloads option to select                    ●  Select Adobe PDF Embedded EXE Social Engineering:                         From the file format exploits menu, select 13) Adobe PDF Embedded EXE                        Social Engineering. (The default is the PDF embedded EXE.)                      ●  Use Built-in BLANK PDF for Attack:","To have SET generate a normal PDF with an embedded EXE and use a                        built-in blank PDF file for the attack, select 2) Use built-in BLANK PDF for                         attac","Day 12                                        Social-Engineer Toolkit (SET) Continued                  Steps continued:                        Select Windows Reverse TCP Shell:                        To use the Windows reverse TCP shell, I selected 1) Windows Reverse TCP                        Shell.                       Enter IP Address for Payload Listener:                        When SET asked me to enter the IP address or the URL for the payload                        listener, I selected the IP address of my attacking system (192.168.88.225 in                         this example), which is the default option since it automatically detects the                        IP address. The default port is 443, but I changed it to another port that is not                        in use on my attacking system. In this example, TCP port 1337 was used.                       Rename the Payload:                        When SET asked if I wanted to rename the payload, I selected 2. Rename                        the file.                       Select E-Mail Attack Single Email Address:                        I then selected 1. E-Mail Attack Single Email Address.                       Create One-Time Use Email Template:                        When SET asked if I wanted to use a predefined email template or create a                        one-time email template, I selected 2. One-Time Use Email Template.                       Create the One-Time Email Message:                        I followed along as SET guided me through the steps to create the one-time                        email message and entered the subject of the email.                       Select Plaintext Email Message:                        When SET asked if I wanted to send the message as an HTML message or in                        plaintext, I selected the default, plaintext.                       Enter the Body of the Message:                        I entered the body of the message by typing or pasting in the text from                        Example 4-2.                       Enter Recipient Email Address:                        I entered the recipient email address and specified whether I wanted to use a                        Gmail account or use my own email server or an open mail relay.","  Enter “From” Email Address and Name:                         I entered the “from” email address (the spoofed sender’s email address) and                        the “from name” the user would see.                      Enter Open-Relay Username and Password:                         If applicable, I entered the open-relay username and password when asked to                        do so.                      Enter SMTP Email Server Address and Port Number:                         I entered the SMTP email server address and the port number. (The default                        port  is  25.)  When  asked  if  I  wanted  to  flag  this  email  as  a  high-priority                        message, I made a selection. The email was then sent to the victim.                       Set Up Listener for Reverse TCP Connection:                        When asked if I wanted to set up a listener for the reverse TCP connection                        from the compromised system, Now I can see whatever the information the                         victim type in the credentials.","Day 13                                         Exploiting Wired and Wireless Networks                  Network-based vulnerabilities and exploits can be catastrophic because of the                types of damage and impact they can cause in an organization.                    Types of network-based attacks and exploits:                      •  Windows name resolution-based attacks and exploits                    •  DNS cache poisoning attacks                     •  Attacks and exploits against Server Message Block (SMB) implementations                    •  Simple Network Management Protocol (SNMP) vulnerabilities and exploit                     •  Simple Mail Transfer Protocol (SMTP) vulnerabilities and exploits                    •  File Transfer Protocol (FTP) vulnerabilities and exploits                    •  Pass-the-hash attacks On-path attacks (previously known as man-in-the-                         middle [MITM] attacks)                    •  SSL stripping attacks Denial-of-service (DoS) and distributed denial-of-                         service (DDoS) attacks                    •  Network access control (NAC) bypass                    •  Virtual local area network (VLAN) hopping attacks                  Observed all these attacks online.","Day 14                                            Exploiting File upload vulnerability                 Today, I explored the file upload vulnerability in the Damn Vulnerable Web                 Application (DVWA) set to 'medium' security. Here’s a step-by-step account of                what I did:                  1.  Setting Up DVWA:                  I started by navigating to the DVWA security tab and ensuring that the security                level was set to ‘medium’. Next, I went to the upload section, which has a                straightforward interface. I clicked on 'browse' to select an image file for                 uploading.                 2.  Creating the Malicious 'Image' File:                 Before uploading, I created a file designed to exploit the vulnerability. I opened                Leafpad (a simple text editor) and typed the following HTML code:                html                 Copy code                <html>                     <body>                        <script>alert('You have been hacked');</script>                    </body>                 </html>                  I then saved this file with a misleading name, hack.html.jpg.                  3. Preparing Burp Suite:                 To intercept and modify the upload request, I fired up Burp Suite, a powerful tool                 for testing web applications. Burp Suite operates by sitting between the client and                the server, allowing me to view and modify the requests sent to the server.                I configured my browser (Firefox) to use Burp Suite as a proxy. In the browser                 preferences, under network settings, I set the proxy address to 127.0.0.1 and the                port to 8080.","4. Intercepting the Upload Request:                  In Burp Suite, under the proxy tab, I made sure the intercept mode was on. Then, I                went back to the DVWA page and clicked on the upload button for my malicious                 file.                 5. Modifying the File Name in Burp Suite:                  As expected, Burp Suite intercepted the request. In the parameter section, I found                 the filename hack.html.jpg. I changed this to hack.html and clicked 'forward' to                send the modified request to the server.                  6. Verifying the Exploit:                 Back on the DVWA page, I received a message confirming that the file was                 uploaded successfully. It even provided the path to the uploaded file (this is                simplified for the tutorial; in real scenarios, finding the file might be more                challenging).                 Navigating to the provided path, I saw a list of uploaded files, including my                hack.html file. I clicked on it, and as intended, a dialog box popped up saying,                \"You have been hacked\".","Day 15                  Today, I delved into the realm of web application vulnerabilities, specifically                focusing on cross-site scripting (XSS) and cross-site request forgery (CSRF).                 These types of vulnerabilities exploit weaknesses in input validation on web                applications. They are commonly used to redirect users to malicious websites to                steal cookies (session tokens) and other sensitive information.                  To illustrate the practical exploitation of XSS vulnerabilities, I used the Browser                Exploitation Framework (BeEF). BeEF is a powerful tool that allows attackers to                 manipulate users by leveraging XSS vulnerabilities. It can be downloaded from                BeEF Project or GitHub.                  Launching BeEF                   BeEF starts a web service on port 3000 by default. From there, the attacker can log                in to a web console and manipulate users who are victims of XSS attacks. The                figure below shows a screenshot of BeEF after launching it.                                 Fig: Interface of BEAF                   Stealing a Browser Cookie                  Once the system is compromised, the attacker can steal the user's session token                (browser cookie). The figure below shows a successful compromise where the                 attacker's web console displays the stolen session token.","Fig: Interface of BEAF control panel                  Sending a Fake Notification                 After compromising the system, BeEF can be used to perform numerous attacks,                 including social engineering attacks. One example is sending fake notifications to                the victim’s browser.                                   Fig: Demonstrates this attack.                           Fig: Fake notification as it appears in the victim’s browser.","Day 16                                    Call Spoofing, HTTP Protocol and Web Sessions                    Call Spoofing                   There are several call spoofing tools that can be used in social engineering attacks.                  The following are a few examples of call spoofing tools:                 SpoofApp: This is an Apple iOS and Android app that can be used to easily spoof a phone                number.                 SpoofCard: This is an Apple iOS and Android app that can spoof a number and change your                voice, record calls, generate different background noises, and send calls straight to voicemail.                  Asterisk: Asterisk is a legitimate voice over IP (VoIP) management tool that can also be used to                impersonate caller ID.                 HTTP Protocol                  The HTTP 1.1 protocol is defined in RFCs 7230-7235. In the context of this module, an HTTP                server essentially refers to a web server, while HTTP clients include browsers, proxies, API                clients, and other custom HTTP client programs.                 Key Characteristics of HTTP:                      ●  Simplicity: HTTP is a very simple protocol, which is advantageous for ease of use but                        can be a limitation in terms of security and performance.                    ●  Stateless Nature: HTTP is categorized as a stateless protocol. This means that each                        HTTP transaction consists of a single request from a client to a server, followed by a                        single response from the server back to the client. There is no persistent connection or                        state maintained between transactions.                 In contrast, stateful protocols such as FTP, SMTP, IMAP, and POP require the server to maintain                the state of its interaction with the client throughout a series of commands, often referred to as a                session.","Web Sessions                  A web session is a sequence of HTTP request and response transactions between a web client                and a server. These transactions include pre-authentication tasks, the authentication process,                session management, access control, and session finalization.                 Key Aspects of Web Sessions:                      ●  Session Tracking: Numerous web applications keep track of information about each user                        during a web transaction. This can include variables such as access rights and localization                        settings.                    ●  Anonymous User Tracking: Web applications can create sessions to keep track of                        anonymous users after their first request. For example, an application might remember a                        user’s language preference.                    ●  Post-Authentication Tracking: After a user has authenticated, the web application uses                        sessions to identify the user on subsequent requests. This allows the application to apply                        security access controls and enhance usability.                 In summary, web applications provide session capabilities both before and after authentication,                allowing them to maintain continuity and security throu","Day 17                                                 DoS and DDoS Attacks                  Denial-of-Service (DoS) and Distributed Denial-of-Service (DDoS) attacks have been significant                threats to cybersecurity for many years. These attacks can cause substantial damage by                overwhelming systems, networks, or services, leading to unavailability or degradation of                services. DoS and DDoS attacks are generally categorized into three types:                  1. Direct DoS Attacks                  A direct DoS attack occurs when the attacker generates packets that are sent directly to the                victim. These packets can vary in protocol or application but are aimed at overwhelming the                victim's system.                 Example: SYN Flood Attack                               Fig: SYN Flood Attack model                  2. Botnet-Based Attacks                  Many attackers use botnets to launch DDoS attacks. A botnet is a collection of compromised                machines that the attacker can manipulate from a command and control (C2) system to                participate in a DDoS attack, send spam emails, and perform other illicit activities.","Example: Botnet DDoS Attack                                     Fig: Demonstration of Botnet DDoS Attack                 3. Reflected                  Reflected DoS and DDoS attacks involve attackers sending spoofed packets to sources, making                them unwitting participants in the attack. UDP is often used in these attacks because it is easily                spoofed due to the lack of a three-way handshake.                 Example: NTP Reflection Attack.                                      Fig: NTP Reflection Attack.                 4. Amplification Attacks An amplification attack is a form of reflected DoS attack where the                response traffic is much larger than the initial request packets sent by the attacker.                  Example: DNS Amplification Attack","Fig: DNS Amplification Attack","Day 18                                                            Project 1                  Exploit OWASP Juice Shop                  Executive Summary                  This project focuses on identifying and exploiting vulnerabilities in the OWASP Juice Shop, an                intentionally insecure web application used for security training. The primary goal was to                understand the practical implications of various security flaws listed in the OWASP Top 10,                demonstrating the severity of these vulnerabilities and providing recommendations for                remediation.                 Introduction                                                               Fig: Interface of OWASP Juice Shop                  OWASP Juice Shop is designed to be a teaching tool for security enthusiasts to practice and                understand the consequences of web security vulnerabilities. This report covers various                vulnerabilities identified and exploited within the Juice Shop environment, emphasizing the                importance of secure coding practices and robust security measures.                  1. SQL Injection                  Introduction                  SQL Injection is a code injection technique that allows an attacker to execute arbitrary SQL                commands on the database, bypassing authentication and accessing or manipulating data. It is                one of the most common and severe web application vulnerabilities.","Severity                  The severity of SQL Injection is typically high, as it can lead to unauthorized access to sensitive                data, data modification, and in severe cases, complete control over the application’s database.                 Tools Used                          •  Burp Suite - To intercept and modify HTTP requests.                        •  Browser Developer Tools - To inspect and manipulate web page elements.                         •  OWASP Juice Shop - The vulnerable application used for testing.                 Steps Used                                                                 Fig: Depicting attempt to login                          •  Go to the Login Page                        Navigate to the login page of OWASP Juice Shop.                        •  Enter Payload in Email Field                        In the email field, enter the following SQL Injection payload:                                 ' OR 1=1--                          •  Enter Random Text in Password Field                        In the password field, enter any random text (e.g., password123).                        •  Submit the Login Form                        Click on the login button to submit the form.                        •  Bypass Authentication                        The SQL Injection payload should bypass the authentication mechanism, logging you in                        as an arbitrary user.","Recommendations                          •  Parameterized Queries: Use parameterized queries (prepared statements) to ensure                           that user input is treated as data, not executable code.                        •  Input Validation: Implement strict input validation to sanitize and validate all user                           inputs.                        •  ORMs and Query Builders: Use Object-Relational Mapping (ORM) frameworks                           and query builders that inherently protect against SQL Injection.                   2. Vulnerability: Cross-Site Scripting (XSS)                  Introduction                 Cross-Site Scripting (XSS) is a security vulnerability that allows an attacker to inject malicious                scripts into web pages viewed by other users. These scripts can execute in the context of the                user’s browser, leading to session hijacking, data theft, and other malicious activities.                  Severity                  The severity of XSS vulnerabilities can range from medium to high, depending on the context                and the impact of the exploit. In this case, an XSS vulnerability allowed an attacker to execute                arbitrary JavaScript in the context of another user's session, which could lead to potential account                compromise and data exposure.                  Tools Used                          •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                 Steps Used                  Go to the \"Contact Us\" Page                          •  Navigate to the \"Contact Us\" page of OWASP Juice Shop.                 Enter Payload in Comment Field                          •  In the comment field, enter the following XSS payload:                <script>alert('XSS');</script>                 Submit the Form","•  Click on the submit button to send the form.                  Check for Alert Box                         •  Revisit the page to see if the alert box pops up, indicating that the script was                           executed.                  Payloads Used                          •  XSS Payload:                <script>alert('XSS');</script>                   Recommendations                         •  Output Encoding: Ensure all user input is properly encoded before being displayed                           in the web page to prevent the execution of malicious scripts.                         •  Content Security Policy (CSP): Implement a strong Content Security Policy to                           restrict the sources from which scripts can be loaded and executed.                         •  Input Validation: Implement rigorous input validation to sanitize and validate all                           user inputs.                        •  HTTPOnly Cookies: Use HTTPOnly cookies to prevent access to session cookies                           via JavaScript.                        •  Regular Security Audits: Conduct regular security audits and penetration testing to                           identify and remediate XSS vulnerabilities.                   3. Insecure Direct Object References (IDOR)                 Introduction                  Insecure Direct Object References (IDOR) occur when an application provides direct access to                objects based on user-supplied input, without proper authorization checks. This vulnerability                allows attackers to access or manipulate data they are not authorized to view.                  Severity                 The severity of IDOR vulnerabilities can be high, as they can lead to unauthorized access to                sensitive data and unauthorized operations. Exploiting an IDOR vulnerability can compromise                the confidentiality and integrity of the affected data.","Tools Used                          •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                  Steps Used                 Go to the URL for Viewing a Specific User's Orders                          •  Navigate to the URL for viewing a specific user's orders (e.g., /#/order-history/1).                  Change the ID at the End of the URL                         •  Modify the ID at the end of the URL to a different number (e.g., /#/order-history/2).                  Check for Unauthorized Access                         •  Check if you can access another user's order history                  Payloads Used                          •  IDOR Exploitation: Changing the URL from /#/order-history/1 to /#/order-history/2.                  Recommendations                         •  Access Control: Implement proper access control mechanisms to ensure that users                           can only access resources they are authorized to view.                         •  Indirect References: Use indirect references to objects rather than exposing direct                           object identifiers in the URLs.                        •  Input Validation: Validate and sanitize all user inputs to prevent unauthorized                           access.                        •  Authorization Checks: Perform thorough authorization checks on the server side                           before granting access to resources.                   4. Sensitive Data Exposure                 Introduction                  Sensitive Data Exposure occurs when an application fails to adequately protect sensitive                information, such as passwords, credit card numbers, or personal data. This vulnerability can                lead to unauthorized access, data theft, and privacy violations.","Severity                  The severity of Sensitive Data Exposure vulnerabilities is typically very high, as it directly                exposes sensitive information to attackers. Exploiting this vulnerability can result in legal and                financial consequences for affected individuals and organizations.                 Tools Used                          •  Burp Suite - To intercept and inspect HTTP requests and responses.                        •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                  Steps Used                  Go to the Administration Section                          •  Navigate to the administration section of OWASP Juice Shop where sensitive data                           might be stored or processed.                 Inspect Network Traffic with Burp Suite                          •  Use Burp Suite to intercept and inspect network traffic.                        •  Look for unencrypted sensitive data such as passwords or credit card numbers being                           transmitted over HTTP.                                        Fig: Sending Request in Burpsuit                   Payloads Used","•  Sensitive Data Exposure: Using Burp Suite to intercept HTTP traffic for sensitive                           data.                  Recommendations                          •  Encryption: Ensure that all sensitive data is encrypted both at rest and in transit using                           strong encryption algorithms.                        •  Data Minimization: Store only essential sensitive data and ensure it is deleted                           securely when no longer needed.                        •  HTTPS: Enforce the use of HTTPS across the entire application to protect data                           transmitted over the network.","Day 19                                                  Project 1 (Continued)                     5. Broken Access Control                  Broken Access Control occurs when users can perform actions beyond their intended                permissions.                 5.1 Unauthorized Access to Admin Functions                  Introduction                  Unauthorized Access to Admin Functions occurs when an application allows users to access                administrative functionalities without proper authentication or authorization checks. This                vulnerability can lead to unauthorized modification of settings, access to sensitive data, or                administrative actions.                  Severity                  The severity of Unauthorized Access to Admin Functions is high, as it can result in significant                security breaches and compromise the integrity of the application and its data.                 Tools Used                          •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                  Steps Used                  Attempt to Access Admin Functionalities                         •  Try accessing administrative functionalities by navigating to /#/administration as a                           regular user.                  Payloads Used                          •  Unauthorized Access: Attempting to access /#/administration as a regular user.","Recommendations                          •  Access Control: Implement strict access control mechanisms to ensure that only                           authorized users can access administrative functionalities.                        •  Error Handling: Implement proper error handling to avoid leaking sensitive                           information about the existence of administrative functionalities.                        •  Regular Security Audits: Conduct regular security audits and penetration testing to                           identify and remediate unauthorized access vulnerabilities.                   5.2 Insecure Direct Object Reference (IDOR)                  Introduction                 Insecure Direct Object Reference (IDOR) occurs when an application exposes direct references                to internal objects, such as database keys or IDs, without proper authorization checks. Attackers                can exploit this vulnerability to access or manipulate data they are not authorized to view.                  Severity                  The severity of IDOR vulnerabilities is high, as it can lead to unauthorized access to sensitive                data and compromise the confidentiality and integrity of the application’s data.                  Tools Used                         •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                  Steps Used                  Change the ID in a URL to Access Another User's Data                         •  Modify the ID in a URL (e.g., /rest/track-order/:id) to access another user's data, such                           as their order history.                                                            Fig: Screenshot of URL box                  Payloads Used                          •  IDOR Exploitation: Modifying the URL to access another user's data.","Recommendations                          •  Indirect Object References: Use indirect references or GUIDs instead of sequential                           IDs to access internal objects.                        •  Authorization Checks: Implement strict authorization checks to ensure that users                           can only access data they are authorized to view.                        •  Input Validation: Validate and sanitize all user inputs to prevent manipulation of                           URL parameters.                  6. Identification and Authentication Failures                  Introduction                 Identification and Authentication Failures encompass issues related to weak authentication                mechanisms, inadequate session management, and improper identity management practices.                These vulnerabilities can lead to unauthorized access, account compromise, and other security                breaches.                  Severity                  The severity of Identification and Authentication Failures can vary but is generally significant, as                it directly impacts the security and integrity of user accounts and sensitive data.                  Tools Used                          •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.                 Steps Used                  Sensitive Files                  Look for Accessible Sensitive Files                          •  Attempt to access sensitive files such as /ftp/legal.md or /ftp/package.json directly                           through the browser.                  Default Credentials                  Attempt to Log In Using Default Credentials","•  Try logging in using default credentials, such as admin/admin123, to see if any                           default accounts are not properly secured.                     Payloads Used                          •  Sensitive Files: Attempting to access /ftp/legal.md and /ftp/package.json.                        •  Default Credentials: Attempting to log in with default credentials.                  Recommendations                         •  Secure Default Settings: Change default settings, passwords, and configurations to                           secure values before deployment.                         •  Least Privilege: Implement least privilege access controls to restrict access to                           sensitive files and functionalities.                         •  Security Headers: Use security headers (e.g., Content Security Policy, HTTP Strict                           Transport Security) to enhance security posture                  7. Security Logging and Monitoring Failures                  Introduction                  Security Logging and Monitoring Failures occur when an application lacks adequate logging of                security-relevant events and fails to generate alerts for suspicious activities. This can result in                undetected attacks, delayed incident response, and increased risk of security breaches.                  Severity                  The severity of Security Logging and Monitoring Failures is high, as it compromises the ability                to detect and respond to security incidents in a timely manner, allowing attackers to operate                undetected.                 Tools Used                          •  Browser Developer Tools - To inspect and manipulate web page elements.                        •  OWASP Juice Shop - The vulnerable application used for testing.","Steps Used                  Insufficient Logging                  Test if Security-Relevant Events are Logged                          •  Cause multiple failed login attempts to test if these events are logged. Check if there                           are entries in the logs indicating failed login attempts.                  Missing Alerts                 Check if the System Raises Alerts for Suspicious Activities                          •  Perform actions such as accessing sensitive URLs or attempting unauthorized access                           to test if these actions trigger any monitoring alerts or notifications.                                   Fig: Invalid login Attempt                  Payloads Used                          •  Insufficient Logging: Testing failed login attempts to verify logging.                        •  Missing Alerts: Testing actions triggering alerts for suspicious activities.                  Recommendations                         •  Comprehensive Logging: Ensure all security-relevant events, including                           authentication failures, access control failures, and system changes, are logged with                           sufficient detail.                         •  Alerting Mechanisms: Implement alerting mechanisms to notify administrators or                           security teams of suspicious activities or potential security incidents.                         •  Monitoring Tools: Use monitoring tools to continuously monitor system logs and                           network traffic for anomalies and indicators of compromise.","Day 20                                                      Report Submission                    We were asked to submit our project report in order to get the Certificate. The format of the                report follows like this:                  1. Title of the Project                  2. Executive Summary                 Brief overview summarizing the project’s objective and outcome.                 3. Vulnerability encoountered.                    i.   Description of each vulnerability.                  ii.   Severity assessment.                 iii.   Tools and techniques utilized.                  iv.   Steps taken to exploit vulnerabilities.                  v.    Screenshots or visuals demonstrating the exploitation process.                  vi.   Payloads used in exploitation.                 vii.   Recommendations for mitigation.                 4. Overall Conclusion","INTERNSHIP OUTCOME","INTERNSHIP OUTCOME                  During my internship at TechByHeart, I gained comprehensive knowledge and hands-on                experience in the field of cybersecurity. I was exposed to various aspects of cybersecurity,                including ethical hacking, vulnerability assessment, and penetration testing. I learned to use                industry-standard tools and techniques for identifying and mitigating security threats, such as                Nmap, Metasploit, and Burp Suite.                  The internship provided me with practical insights into real-world cybersecurity challenges and                solutions. I developed skills in network scanning, exploitation, and social engineering, and I                gained a deeper understanding of the importance of balancing offensive and defensive strategies                in cybersecurity. The opportunity to work on live projects and conduct security assessments on                vulnerable web applications greatly enhanced my technical abilities and problem-solving skills.                  Overall, this internship significantly contributed to my academic and professional development                by bridging the gap between theoretical knowledge and practical application.","CONCLUSION","CONCLUSION                  The internship at TechByHeart was a highly enriching experience that equipped me with the                necessary skills and knowledge to pursue a career in cybersecurity. The hands-on exposure to                various tools and techniques, combined with the guidance from experienced professionals,                allowed me to apply my academic learning to real-world scenarios. This experience has not only                solidified my interest in cybersecurity but has also prepared me to take on future challenges in                this dynamic field. I am confident that the skills and insights gained during this internship will                serve as a strong foundation for my future endeavors in cybersecurity.","REFERENCES","References                       1.  OWASP Juice Shop. (n.d.). Exploiting vulnerabilities: SQL Injection, Cross-Site                        Scripting (XSS), and Insecure Direct Object References (IDOR). Retrieved from                        OWASP Juice Shop training material.                    2.  Burp Suite. (n.d.). Web security testing: Techniques and tools. Retrieved from Burp Suite                        documentation.                    3.  Metasploit Framework. (n.d.). Exploiting vulnerabilities in network-based attacks.                        Retrieved from Metasploit Framework user guide.                    4.  Social-Engineer Toolkit (SET). (n.d.). Social engineering attacks: Phishing, spoofing, and                        payload generation. Retrieved from SET official documentation."];